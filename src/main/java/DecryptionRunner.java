import java.io.IOException;

/**
 * @author s4dad\potolal
 */
public class DecryptionRunner {

    /* ---- Constants ---- */


    /* ---- Instance Variables ---- */


    /* ---- Constructors ---- */


    /* ---- Business methods ---- */

    public static void main(String[] args) throws IOException {

//         File file = new File("/home/potolal/development/workspaces/intelliJ/BORIS/TESTBED/ASiCEncryptionDecriptionClient/security/fileToDecrypt");
//        File file = new File(Thread.currentThread().getContextClassLoader().getResource("").getPath() + "fileToDecrypt");
//         byte[] fileContent = Files.readAllBytes(file.toPath());
        DecryptionService decryptionService = new DecryptionService();
        String decryptedContent = decryptionService.validateAndDecrypt("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");
//        String decryptedContent = decryptionService.validateAndDecrypt(fileContent);
        System.out.println(decryptedContent);

    }


    /* ---- Getters and Setters ---- */
}
